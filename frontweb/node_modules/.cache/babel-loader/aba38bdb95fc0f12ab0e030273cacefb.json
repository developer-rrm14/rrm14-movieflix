{"ast":null,"code":"var _process$env$REACT_AP, _process$env$REACT_AP2, _process$env$REACT_AP3;\n\nimport axios from 'axios';\nimport qs from 'qs';\nimport history from './history';\nimport { getAuthData } from './storage'; ////////////////////////////////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\nexport const BASE_URL = (_process$env$REACT_AP = process.env.REACT_APP_BACKEND_URL) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : 'http://localhost:8080'; ////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\n\nconst CLIENT_ID = (_process$env$REACT_AP2 = process.env.REACT_APP_CLIENT_ID) !== null && _process$env$REACT_AP2 !== void 0 ? _process$env$REACT_AP2 : 'myclientid';\nconst CLIENT_SECRET = (_process$env$REACT_AP3 = process.env.REACT_APP_CLIENT_SECRET) !== null && _process$env$REACT_AP3 !== void 0 ? _process$env$REACT_AP3 : 'catalog123'; ////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\n\nconst basicHeader = () => 'Basic ' + window.btoa(CLIENT_ID + ':' + CLIENT_SECRET); ////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\n\n\nexport const requestBackendLogin = loginData => {\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    Authorization: basicHeader()\n  };\n  const data = qs.stringify({ ...loginData,\n    grant_type: 'password'\n  });\n  return axios({\n    method: 'POST',\n    baseURL: BASE_URL,\n    url: '/oauth/token',\n    data,\n    headers\n  });\n}; ////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\n\nexport const requestBackend = config => {\n  const headers = config.withCredentials ? { ...config.headers,\n    Authorization: 'Bearer ' + getAuthData().access_token\n  } : config.headers;\n  return axios({ ...config,\n    baseURL: BASE_URL,\n    headers\n  });\n}; ////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\n// Add a request interceptor\n////////////////////////////////////////////////////////////////////////////////////////\n\naxios.interceptors.request.use(function (config) {\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); ////////////////////////////////////////////////////////////////////////////////////////\n// Add a response interceptor\n////////////////////////////////////////////////////////////////////////////////////////\n\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.response.status === 401 || error.response.status === 403) {\n    history.push('/admin/auth');\n  }\n\n  return Promise.reject(error);\n}); ////////////////////////////////////////////////////////////////////////////////////////","map":{"version":3,"sources":["C:/DevSuperior/wskp-bootcamp/rrm14-movieflix/frontweb/src/utils/requests.ts"],"names":["axios","qs","history","getAuthData","BASE_URL","process","env","REACT_APP_BACKEND_URL","CLIENT_ID","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","basicHeader","window","btoa","requestBackendLogin","loginData","headers","Authorization","data","stringify","grant_type","method","baseURL","url","requestBackend","config","withCredentials","access_token","interceptors","request","use","error","Promise","reject","response","status","push"],"mappings":";;AAAA,OAAOA,KAAP,MAA0C,OAA1C;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,WAAT,QAA4B,WAA5B,C,CAEA;;AAKA;AAEA;AACA,OAAO,MAAMC,QAAQ,4BACnBC,OAAO,CAACC,GAAR,CAAYC,qBADO,yEACkB,uBADhC,C,CAEP;AAEA;;AACA,MAAMC,SAAS,6BAAGH,OAAO,CAACC,GAAR,CAAYG,mBAAf,2EAAsC,YAArD;AACA,MAAMC,aAAa,6BAAGL,OAAO,CAACC,GAAR,CAAYK,uBAAf,2EAA0C,YAA7D,C,CAEA;AAEA;;AACA,MAAMC,WAAW,GAAG,MAClB,WAAWC,MAAM,CAACC,IAAP,CAAYN,SAAS,GAAG,GAAZ,GAAkBE,aAA9B,CADb,C,CAEA;AAEA;;;AACA,OAAO,MAAMK,mBAAmB,GAAIC,SAAD,IAA0B;AAC3D,QAAMC,OAAO,GAAG;AACd,oBAAgB,mCADF;AAEdC,IAAAA,aAAa,EAAEN,WAAW;AAFZ,GAAhB;AAKA,QAAMO,IAAI,GAAGlB,EAAE,CAACmB,SAAH,CAAa,EACxB,GAAGJ,SADqB;AAExBK,IAAAA,UAAU,EAAE;AAFY,GAAb,CAAb;AAKA,SAAOrB,KAAK,CAAC;AACXsB,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,OAAO,EAAEnB,QAFE;AAGXoB,IAAAA,GAAG,EAAE,cAHM;AAIXL,IAAAA,IAJW;AAKXF,IAAAA;AALW,GAAD,CAAZ;AAOD,CAlBM,C,CAmBP;AAEA;;AACA,OAAO,MAAMQ,cAAc,GAAIC,MAAD,IAAgC;AAC5D,QAAMT,OAAO,GAAGS,MAAM,CAACC,eAAP,GACZ,EACE,GAAGD,MAAM,CAACT,OADZ;AAEEC,IAAAA,aAAa,EAAE,YAAYf,WAAW,GAAGyB;AAF3C,GADY,GAKZF,MAAM,CAACT,OALX;AAOA,SAAOjB,KAAK,CAAC,EAAE,GAAG0B,MAAL;AAAaH,IAAAA,OAAO,EAAEnB,QAAtB;AAAgCa,IAAAA;AAAhC,GAAD,CAAZ;AACD,CATM,C,CAUP;AAEA;AACA;AACA;;AACAjB,KAAK,CAAC6B,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,UAAUL,MAAV,EAAkB;AAChB,SAAOA,MAAP;AACD,CAHH,EAIE,UAAUM,KAAV,EAAiB;AACf,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CANH,E,CASA;AACA;AACA;;AACAhC,KAAK,CAAC6B,YAAN,CAAmBM,QAAnB,CAA4BJ,GAA5B,CACE,UAAUI,QAAV,EAAoB;AAClB,SAAOA,QAAP;AACD,CAHH,EAIE,UAAUH,KAAV,EAAiB;AACf,MAAIA,KAAK,CAACG,QAAN,CAAeC,MAAf,KAA0B,GAA1B,IAAiCJ,KAAK,CAACG,QAAN,CAAeC,MAAf,KAA0B,GAA/D,EAAoE;AAClElC,IAAAA,OAAO,CAACmC,IAAR,CAAa,aAAb;AACD;;AAED,SAAOJ,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAVH,E,CAYA","sourcesContent":["import axios, { AxiosRequestConfig } from 'axios';\r\nimport qs from 'qs';\r\nimport history from './history';\r\nimport { getAuthData } from './storage';\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////\r\ntype LoginData = {\r\n  username: string;\r\n  password: string;\r\n};\r\n////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////\r\nexport const BASE_URL =\r\n  process.env.REACT_APP_BACKEND_URL ?? 'http://localhost:8080';\r\n////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID ?? 'myclientid';\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET ?? 'catalog123';\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////\r\nconst basicHeader = () =>\r\n  'Basic ' + window.btoa(CLIENT_ID + ':' + CLIENT_SECRET);\r\n////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////\r\nexport const requestBackendLogin = (loginData: LoginData) => {\r\n  const headers = {\r\n    'Content-Type': 'application/x-www-form-urlencoded',\r\n    Authorization: basicHeader(),\r\n  };\r\n\r\n  const data = qs.stringify({\r\n    ...loginData,\r\n    grant_type: 'password',\r\n  });\r\n\r\n  return axios({\r\n    method: 'POST',\r\n    baseURL: BASE_URL,\r\n    url: '/oauth/token',\r\n    data,\r\n    headers,\r\n  });\r\n};\r\n////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////\r\nexport const requestBackend = (config: AxiosRequestConfig) => {\r\n  const headers = config.withCredentials\r\n    ? {\r\n        ...config.headers,\r\n        Authorization: 'Bearer ' + getAuthData().access_token,\r\n      }\r\n    : config.headers;\r\n\r\n  return axios({ ...config, baseURL: BASE_URL, headers });\r\n};\r\n////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////\r\n// Add a request interceptor\r\n////////////////////////////////////////////////////////////////////////////////////////\r\naxios.interceptors.request.use(\r\n  function (config) {\r\n    return config;\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////\r\n// Add a response interceptor\r\n////////////////////////////////////////////////////////////////////////////////////////\r\naxios.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    if (error.response.status === 401 || error.response.status === 403) {\r\n      history.push('/admin/auth');\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n////////////////////////////////////////////////////////////////////////////////////////\r\n"]},"metadata":{},"sourceType":"module"}